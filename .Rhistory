if (i== "Brock Nichols"){
break}
else {
print (i)}
print(count)
count= count+1
}
#Initial Creation of Regional Subgroups and tests that they cover everything. DO NOT MODIFY. THIS WAS SUPER HARD TO MAKE.
NW <- subset(fp, state=="CA"| state=="WA" | state=="OR" | state== "NV"| state=="ID"| state=="UT"|state=="MT"|state=="CO"| state=="WY"| state=="AK")
nrow(NW)
SW <- subset(fp, state== "NM"| state=="AZ"| state== "TX"| state=="OK"| state== "HI")
nrow(SW)
MW <- subset(fp, state== "IL"| state=="WI"| state=="IN"| state=="MI"| state== "MN"| state== "MO"| state== "IA"| state=="KS"| state=="ND"| state== "SD"| state=="NE"| state=="OH")
nrow(MW)
SE <- subset(fp, state == "GA"| state=="AL"| state== "MS"| state=="LA"| state=="TN"| state=="NC"| state=="SC"| state=="FL"| state== "AR"|state=="WV"| state=="DC"| state=="VA"| state=="KY"| state=="DE")
nrow(SE)
NE <- subset(fp, state=="NY"| state== "MD"| state=="RI"| state== "VT"| state=="PA"| state=="ME"| state== "NH"| state=="NJ"| state=="CT"| state=="MA")
nrow(NE)
(nrow(NE)+nrow(SE) +nrow(MW) +nrow(SW) + nrow(NW))
nrow(fp)
#Implementation of the subgroups as a new factor called "regions". PLEASE PLEASE DO NOT MODIFY. THIS TOOK FOREVER
fp$regions <- as.factor(ifelse(( fp$state=="CA"| fp$state=="WA" | fp$state=="OR" | fp$state== "NV"| fp$state=="ID"| fp$state=="UT"|fp$state=="MT"|fp$state=="CO"| fp$state=="WY"| fp$state=="AK"), 'NW',
ifelse((fp$state== "NM"| fp$state=="AZ"| fp$state== "TX"| fp$state=="OK"| fp$state== "HI"), 'SW',
ifelse((fp$state== "IL"| fp$state=="WI"| fp$state=="IN"| fp$state=="MI"| fp$state== "MN"| fp$state== "MO"| fp$state== "IA"| fp$state=="KS"| fp$state=="ND"| fp$state== "SD"| fp$state=="NE"| fp$state=="OH"), 'MW',
ifelse(( fp$state=="NY"| fp$state== "MD"| fp$state=="RI"| fp$state== "VT"| fp$state=="PA"| fp$state=="ME"| fp$state== "NH"| fp$state=="NJ"| fp$state=="CT"| fp$state=="MA"), 'NE', 'SE')))))
#Defining 2 new factors called stbcp and rgbcp. These show the proportions of body cameras being on per state and per region respectively. PLEASE DO NOT MODIFY. THIS WAS HARD AS HELL.
#Still working on it
sfp <- fp %>%
group_by(state) %>%
mutate(stbcp =  sum(body_camera==1)/n())
rfp <- fp %>%
group_by(regions) %>%
mutate(rgbcp =  sum(body_camera==1)/n())
#So Now we Have two sub datasets: sfp has the stbcp column that shows each states percentage of body cameras being on, and rfp which does the same but for regions
#Just some tests on the new sub dataset
mean(sfp$stbcp)
head(sfp)
#a bar graph showing number of fatal police shootings AND proportions of body cameras being on by region (too many states to show on a bar graph like this)
ggplot(fp, aes(x = regions, y = frequency(regions), color=body_camera)) + geom_bar(stat = "identity")+ labs(x = "State", y="Number of Incidents", title = "Regional Police Shootings Colored by Body Camera Proportions")
#Normality check of proportions of body cameras being on by state
qqnorm(sfp$stbcp)
#Seems Normal
#Scatter Plot of Body Camera Proportion by State
ggplot(sfp, aes(x=state, y= stbcp, label=state)) + geom_point(shape=6, color="violet")+ labs(x = "State", y="Body Camera Proportion", title = "Body Camera On Proportion By US State") + geom_text(hjust=1, vjust=-0.6)
#This is kind of a mess so lets try grouping by regions on the next graph
ggplot(rfp, aes(x=regions, y= rgbcp, label=regions)) + geom_point(shape=8, color="navy")+ labs(x = "Region", y="Body Camera Proportion", title = "Body Camera On Proportion By US Region") +  geom_text(hjust=1, vjust=-0.6)
#Some statistical testing that I need to tinker more with next week
anova(lm( stbcp~state , sfp))
# Use sfp to call dataset grouped by states, call rfp dataset grouped by regions, and fp
mean(rfp$rgbcp)
knitr::opts_chunk$set(echo = TRUE)
#Calling Packages
library(dplyr)
library(ggplot2)
fp1<- data.frame(read.csv("FPS22.csv"))
#Cleaning null values from dataset
fp <- na.omit(fp1) # Method 1 - Remove NA
#Getting row count and latest incident
nrow(fp)
max(fp$date)
#test stats
str(fp)
mean(fp$age, na.rm= TRUE)
median(fp$age)
#First 7 names Printed
count=1
for (i in fp$name){
if (i== "Brock Nichols"){
break}
else {
print (i)}
print(count)
count= count+1
}
#Initial Creation of Regional Subgroups and tests that they cover everything. DO NOT MODIFY. THIS WAS SUPER HARD TO MAKE.
NW <- subset(fp, state=="CA"| state=="WA" | state=="OR" | state== "NV"| state=="ID"| state=="UT"|state=="MT"|state=="CO"| state=="WY"| state=="AK")
nrow(NW)
SW <- subset(fp, state== "NM"| state=="AZ"| state== "TX"| state=="OK"| state== "HI")
nrow(SW)
MW <- subset(fp, state== "IL"| state=="WI"| state=="IN"| state=="MI"| state== "MN"| state== "MO"| state== "IA"| state=="KS"| state=="ND"| state== "SD"| state=="NE"| state=="OH")
nrow(MW)
SE <- subset(fp, state == "GA"| state=="AL"| state== "MS"| state=="LA"| state=="TN"| state=="NC"| state=="SC"| state=="FL"| state== "AR"|state=="WV"| state=="DC"| state=="VA"| state=="KY"| state=="DE")
nrow(SE)
NE <- subset(fp, state=="NY"| state== "MD"| state=="RI"| state== "VT"| state=="PA"| state=="ME"| state== "NH"| state=="NJ"| state=="CT"| state=="MA")
nrow(NE)
(nrow(NE)+nrow(SE) +nrow(MW) +nrow(SW) + nrow(NW))
nrow(fp)
table(fp$race)
#Implementation of the subgroups as a new factor called "regions". PLEASE PLEASE DO NOT MODIFY. THIS TOOK FOREVER
fp$regions <- as.factor(ifelse(( fp$state=="CA"| fp$state=="WA" | fp$state=="OR" | fp$state== "NV"| fp$state=="ID"| fp$state=="UT"|fp$state=="MT"|fp$state=="CO"| fp$state=="WY"| fp$state=="AK"), 'NW',
ifelse((fp$state== "NM"| fp$state=="AZ"| fp$state== "TX"| fp$state=="OK"| fp$state== "HI"), 'SW',
ifelse((fp$state== "IL"| fp$state=="WI"| fp$state=="IN"| fp$state=="MI"| fp$state== "MN"| fp$state== "MO"| fp$state== "IA"| fp$state=="KS"| fp$state=="ND"| fp$state== "SD"| fp$state=="NE"| fp$state=="OH"), 'MW',
ifelse(( fp$state=="NY"| fp$state== "MD"| fp$state=="RI"| fp$state== "VT"| fp$state=="PA"| fp$state=="ME"| fp$state== "NH"| fp$state=="NJ"| fp$state=="CT"| fp$state=="MA"), 'NE', 'SE')))))
#Defining 2 new datasets. These show all the variables (with some modification) by state. PLEASE DO NOT MODIFY. THIS WAS HARD AS HELL.
#Still working on it
sfp <- fp %>%
group_by(state) %>%
mutate(stbcp =  sum(body_camera==1)/n())
#This is a numeric proportion of the Men by state
sfp <- sfp %>%
group_by(state) %>%
mutate(gen.p =  sum(gender=="M")/n())
#This is a numeric proportion of sings_of_mental_illness by state
sfp <- sfp %>%
group_by(state) %>%
mutate(smi.p =  sum(signs_of_mental_illness==TRUE)/n())
#This is a numeric proportion of fleeing victims by state
sfp <- sfp %>%
group_by(state) %>%
mutate(flee.p =  sum(flee=="fleeing")/n())
#This is a numeric proportion of attackers by state
sfp <- sfp %>%
group_by(state) %>%
mutate(att.p =  sum(threat_level== "attack")/n())
#This is a numeric proportion of armed victims by state
sfp <- sfp %>%
group_by(state) %>%
mutate(armed.p =  sum(armed != "unarmed")/n())
#This is a numeric proportion of suspects being shot (as opposed to tasered) by state
sfp <- sfp %>%
group_by(state) %>%
mutate(MoD.p =  sum(manner_of_death == "shot")/n())
#This is the average age by state
sfp <- sfp %>%
group_by(state) %>%
mutate(age.avg =  sum(age)/n())
#This is variable is for later analysis (maybe for the final) and is the proportion of non-white victims by state
sfp <- sfp %>%
group_by(state) %>%
mutate(Non_White_prop =  sum(race != "W")/n())
#This line just drops all non grouped by state data from this version of the dataframe
By_State <- subset(sfp, select= -c(name, id, age, latitude, longitude, city, manner_of_death, gender, armed, race, signs_of_mental_illness, flee, threat_level, body_camera, date, is_geocoding_exact))
knitr::opts_chunk$set(echo = TRUE)
#Calling Packages
library(dplyr)
library(ggplot2)
fp1<- data.frame(read.csv("FPS22.csv"))
#Cleaning null values from dataset
fp <- na.omit(fp1) # Method 1 - Remove NA
#Getting row count and latest incident
nrow(fp)
max(fp$date)
#test stats
str(fp)
mean(fp$age, na.rm= TRUE)
median(fp$age)
#First 7 names Printed
count=1
for (i in fp$name){
if (i== "Brock Nichols"){
break}
else {
print (i)}
print(count)
count= count+1
}
#Initial Creation of Regional Subgroups and tests that they cover everything. DO NOT MODIFY. THIS WAS SUPER HARD TO MAKE.
NW <- subset(fp, state=="CA"| state=="WA" | state=="OR" | state== "NV"| state=="ID"| state=="UT"|state=="MT"|state=="CO"| state=="WY"| state=="AK")
nrow(NW)
SW <- subset(fp, state== "NM"| state=="AZ"| state== "TX"| state=="OK"| state== "HI")
nrow(SW)
MW <- subset(fp, state== "IL"| state=="WI"| state=="IN"| state=="MI"| state== "MN"| state== "MO"| state== "IA"| state=="KS"| state=="ND"| state== "SD"| state=="NE"| state=="OH")
nrow(MW)
SE <- subset(fp, state == "GA"| state=="AL"| state== "MS"| state=="LA"| state=="TN"| state=="NC"| state=="SC"| state=="FL"| state== "AR"|state=="WV"| state=="DC"| state=="VA"| state=="KY"| state=="DE")
nrow(SE)
NE <- subset(fp, state=="NY"| state== "MD"| state=="RI"| state== "VT"| state=="PA"| state=="ME"| state== "NH"| state=="NJ"| state=="CT"| state=="MA")
nrow(NE)
(nrow(NE)+nrow(SE) +nrow(MW) +nrow(SW) + nrow(NW))
nrow(fp)
table(fp$race)
#Implementation of the subgroups as a new factor called "regions". PLEASE PLEASE DO NOT MODIFY. THIS TOOK FOREVER
fp$regions <- as.factor(ifelse(( fp$state=="CA"| fp$state=="WA" | fp$state=="OR" | fp$state== "NV"| fp$state=="ID"| fp$state=="UT"|fp$state=="MT"|fp$state=="CO"| fp$state=="WY"| fp$state=="AK"), 'NW',
ifelse((fp$state== "NM"| fp$state=="AZ"| fp$state== "TX"| fp$state=="OK"| fp$state== "HI"), 'SW',
ifelse((fp$state== "IL"| fp$state=="WI"| fp$state=="IN"| fp$state=="MI"| fp$state== "MN"| fp$state== "MO"| fp$state== "IA"| fp$state=="KS"| fp$state=="ND"| fp$state== "SD"| fp$state=="NE"| fp$state=="OH"), 'MW',
ifelse(( fp$state=="NY"| fp$state== "MD"| fp$state=="RI"| fp$state== "VT"| fp$state=="PA"| fp$state=="ME"| fp$state== "NH"| fp$state=="NJ"| fp$state=="CT"| fp$state=="MA"), 'NE', 'SE')))))
#Defining 2 new datasets. These show all the variables (with some modification) by state. PLEASE DO NOT MODIFY. THIS WAS HARD AS HELL.
#Still working on it
sfp <- fp %>%
group_by(state) %>%
mutate(stbcp =  sum(body_camera==1)/n())
#This is a numeric proportion of the Men by state
sfp <- sfp %>%
group_by(state) %>%
mutate(gen.p =  sum(gender=="M")/n())
#This is a numeric proportion of sings_of_mental_illness by state
sfp <- sfp %>%
group_by(state) %>%
mutate(smi.p =  sum(signs_of_mental_illness==TRUE)/n())
#This is a numeric proportion of fleeing victims by state
sfp <- sfp %>%
group_by(state) %>%
mutate(flee.p =  sum(flee=="fleeing")/n())
#This is a numeric proportion of attackers by state
sfp <- sfp %>%
group_by(state) %>%
mutate(att.p =  sum(threat_level== "attack")/n())
#This is a numeric proportion of armed victims by state
sfp <- sfp %>%
group_by(state) %>%
mutate(armed.p =  sum(armed != "unarmed")/n())
#This is a numeric proportion of suspects being shot (as opposed to tasered) by state
sfp <- sfp %>%
group_by(state) %>%
mutate(MoD.p =  sum(manner_of_death == "shot")/n())
#This is the average age by state
sfp <- sfp %>%
group_by(state) %>%
mutate(age.avg =  sum(age)/n())
#This is variable is for later analysis (maybe for the final) and is the proportion of non-white victims by state
sfp <- sfp %>%
group_by(state) %>%
mutate(Non_White_prop =  sum(race != "W")/n())
#This line just drops all non grouped by state data from this version of the dataframe
By_State <- subset(sfp, select= -c(name, id, age, latitude, longitude, city, manner_of_death, gender, armed, race, signs_of_mental_illness, flee, threat_level, body_camera, date, is_geocoding_exact))
rfp <- fp %>%
group_by(regions) %>%
mutate(rgbcp =  sum(body_camera==1)/n())
rfp <- sfp %>%
group_by(regions) %>%
mutate(gen.p =  sum(gender=="M")/n())
rfp <- sfp %>%
group_by(regions) %>%
mutate(smi.p =  sum(signs_of_mental_illness==TRUE)/n())
rfp <- rfp %>%
group_by(regions) %>%
mutate(flee.p =  sum(flee=="fleeing")/n())
rfp <- sfp %>%
group_by(regions) %>%
mutate(att.p =  sum(threat_level== "attack")/n())
rfp <- sfp %>%
group_by(regions) %>%
mutate(armed.p =  sum(armed != "unarmed")/n())
rfp <- sfp %>%
group_by(regions) %>%
mutate(MoD.p =  sum(manner_of_death == "shot")/n())
rfp <- sfp %>%
group_by(regions) %>%
mutate(age.avg =  sum(age)/n())
rfp <- sfp %>%
group_by(regions) %>%
mutate(Non_White_prop =  sum(race != "W")/n())
By_Region <- subset(sfp, select= -c(name, id, age, latitude, longitude, city, manner_of_death, gender, armed, race, signs_of_mental_illness, flee, threat_level, body_camera, regions, date, is_geocoding_exact))
summary(By_Region)
#Just some tests on the new sub dataset
mean(By_State$stbcp)
head(By_State)
#a bar graph showing number of fatal police shootings AND proportions of body cameras being on by region (too many states to show on a bar graph like this)
ggplot(fp, aes(x = regions, y = frequency(regions), color=body_camera)) + geom_bar(stat = "identity")+ labs(x = "State", y="Number of Incidents", title = "Regional Police Shootings Colored by Body Camera Proportions")
#Normality check of proportions of body cameras being on by state
qqnorm(By_State$stbcp)
#Seems Normal
#Scatter Plot of Body Camera Proportion by State
ggplot(By_State, aes(x=state, y= stbcp, label=state)) + geom_point(shape=6, color="violet")+ labs(x = "State", y="Body Camera Proportion", title = "Body Camera On Proportion By US State") + geom_text(hjust=1, vjust=-0.6)
#This is kind of a mess so lets try grouping by regions on the next graph
#ggplot(By_Region, aes(x=regions, y= rgbcp, label=regions)) + geom_point(shape=8, color="navy")+ labs(x = "Region", y="Body Camera Proportion", title = "Body Camera On Proportion #By US Region") +  geom_text(hjust=1, vjust=-0.6)
summary(By_State)
#Some statistical testing that I need to tinker more with next week
itwo.way <- aov(stbcp ~ ((age.avg * Non_White_prop * gen.p) + (smi.p * flee.p * MoD.p * att.p * armed.p)), data=sfp)
summary(itwo.way)
# Use sfp to call dataset grouped by states, call rfp dataset grouped by regions, and fp
mean(rfp$rgbcp)
head(By_State)
knitr::opts_chunk$set(echo = TRUE)
#Calling Packages
library(dplyr)
library(ggplot2)
fp1<- data.frame(read.csv("FPS22.csv"))
#Cleaning null values from dataset
fp <- na.omit(fp1) # Method 1 - Remove NA
#Getting row count and latest incident
nrow(fp)
max(fp$date)
#test stats
str(fp)
mean(fp$age, na.rm= TRUE)
median(fp$age)
#First 7 names Printed
count=1
for (i in fp$name){
if (i== "Brock Nichols"){
break}
else {
print (i)}
print(count)
count= count+1
}
#Initial Creation of Regional Subgroups and tests that they cover everything. DO NOT MODIFY. THIS WAS SUPER HARD TO MAKE.
NW <- subset(fp, state=="CA"| state=="WA" | state=="OR" | state== "NV"| state=="ID"| state=="UT"|state=="MT"|state=="CO"| state=="WY"| state=="AK")
nrow(NW)
SW <- subset(fp, state== "NM"| state=="AZ"| state== "TX"| state=="OK"| state== "HI")
nrow(SW)
MW <- subset(fp, state== "IL"| state=="WI"| state=="IN"| state=="MI"| state== "MN"| state== "MO"| state== "IA"| state=="KS"| state=="ND"| state== "SD"| state=="NE"| state=="OH")
nrow(MW)
SE <- subset(fp, state == "GA"| state=="AL"| state== "MS"| state=="LA"| state=="TN"| state=="NC"| state=="SC"| state=="FL"| state== "AR"|state=="WV"| state=="DC"| state=="VA"| state=="KY"| state=="DE")
nrow(SE)
NE <- subset(fp, state=="NY"| state== "MD"| state=="RI"| state== "VT"| state=="PA"| state=="ME"| state== "NH"| state=="NJ"| state=="CT"| state=="MA")
nrow(NE)
(nrow(NE)+nrow(SE) +nrow(MW) +nrow(SW) + nrow(NW))
nrow(fp)
table(fp$race)
#Implementation of the subgroups as a new factor called "regions". PLEASE PLEASE DO NOT MODIFY. THIS TOOK FOREVER
fp$regions <- as.factor(ifelse(( fp$state=="CA"| fp$state=="WA" | fp$state=="OR" | fp$state== "NV"| fp$state=="ID"| fp$state=="UT"|fp$state=="MT"|fp$state=="CO"| fp$state=="WY"| fp$state=="AK"), 'NW',
ifelse((fp$state== "NM"| fp$state=="AZ"| fp$state== "TX"| fp$state=="OK"| fp$state== "HI"), 'SW',
ifelse((fp$state== "IL"| fp$state=="WI"| fp$state=="IN"| fp$state=="MI"| fp$state== "MN"| fp$state== "MO"| fp$state== "IA"| fp$state=="KS"| fp$state=="ND"| fp$state== "SD"| fp$state=="NE"| fp$state=="OH"), 'MW',
ifelse(( fp$state=="NY"| fp$state== "MD"| fp$state=="RI"| fp$state== "VT"| fp$state=="PA"| fp$state=="ME"| fp$state== "NH"| fp$state=="NJ"| fp$state=="CT"| fp$state=="MA"), 'NE', 'SE')))))
#Defining 2 new datasets. These show all the variables (with some modification) by state. PLEASE DO NOT MODIFY. THIS WAS HARD AS HELL.
#Still working on it
sfp <- fp %>%
group_by(state) %>%
mutate(stbcp =  sum(body_camera==1)/n())
#This is a numeric proportion of the Men by state
sfp <- sfp %>%
group_by(state) %>%
mutate(gen.p =  sum(gender=="M")/n())
#This is a numeric proportion of sings_of_mental_illness by state
sfp <- sfp %>%
group_by(state) %>%
mutate(smi.p =  sum(signs_of_mental_illness==TRUE)/n())
#This is a numeric proportion of fleeing victims by state
sfp <- sfp %>%
group_by(state) %>%
mutate(flee.p =  sum(flee=="fleeing")/n())
#This is a numeric proportion of attackers by state
sfp <- sfp %>%
group_by(state) %>%
mutate(att.p =  sum(threat_level== "attack")/n())
#This is a numeric proportion of armed victims by state
sfp <- sfp %>%
group_by(state) %>%
mutate(armed.p =  sum(armed != "unarmed")/n())
#This is a numeric proportion of suspects being shot (as opposed to tasered) by state
sfp <- sfp %>%
group_by(state) %>%
mutate(MoD.p =  sum(manner_of_death == "shot")/n())
#This is the average age by state
sfp <- sfp %>%
group_by(state) %>%
mutate(age.avg =  sum(age)/n())
#This is variable is for later analysis (maybe for the final) and is the proportion of non-white victims by state
sfp <- sfp %>%
group_by(state) %>%
mutate(Non_White_prop =  sum(race != "W")/n())
#This line just drops all non grouped by state data from this version of the dataframe
By_State <- subset(sfp, select= -c(name, id, age, latitude, longitude, city, manner_of_death, gender, armed, race, signs_of_mental_illness, flee, threat_level, body_camera, date, is_geocoding_exact))
rfp <- fp %>%
group_by(regions) %>%
mutate(rgbcp =  sum(body_camera==TRUE)/n())
rfp <- sfp %>%
group_by(regions) %>%
mutate(gen.p =  sum(gender=="M")/n())
rfp <- sfp %>%
group_by(regions) %>%
mutate(smi.p =  sum(signs_of_mental_illness==TRUE)/n())
rfp <- rfp %>%
group_by(regions) %>%
mutate(flee.p =  sum(flee=="fleeing")/n())
rfp <- sfp %>%
group_by(regions) %>%
mutate(att.p =  sum(threat_level== "attack")/n())
rfp <- sfp %>%
group_by(regions) %>%
mutate(armed.p =  sum(armed != "unarmed")/n())
rfp <- sfp %>%
group_by(regions) %>%
mutate(MoD.p =  sum(manner_of_death == "shot")/n())
rfp <- sfp %>%
group_by(regions) %>%
mutate(age.avg =  sum(age)/n())
rfp <- sfp %>%
group_by(regions) %>%
mutate(Non_White_prop =  sum(race != "W")/n())
By_Region <- subset(sfp, select= -c(name, id, age, latitude, longitude, city, manner_of_death, gender, armed, race, signs_of_mental_illness, flee, threat_level, body_camera, regions, date, is_geocoding_exact))
summary(By_Region)
#Just some tests on the new sub dataset
mean(By_State$stbcp)
head(By_State)
#a bar graph showing number of fatal police shootings AND proportions of body cameras being on by region (too many states to show on a bar graph like this)
ggplot(fp, aes(x = regions, y = frequency(regions), color=body_camera)) + geom_bar(stat = "identity")+ labs(x = "State", y="Number of Incidents", title = "Regional Police Shootings Colored by Body Camera Proportions")
#Normality check of proportions of body cameras being on by state
qqnorm(By_State$stbcp)
#Seems Normal
#Scatter Plot of Body Camera Proportion by State
ggplot(By_State, aes(x=state, y= stbcp, label=state)) + geom_point(shape=6, color="violet")+ labs(x = "State", y="Body Camera Proportion", title = "Body Camera On Proportion By US State") + geom_text(hjust=1, vjust=-0.6)
#This is kind of a mess so lets try grouping by regions on the next graph
#ggplot(By_Region, aes(x=regions, y= rgbcp, label=regions)) + geom_point(shape=8, color="navy")+ labs(x = "Region", y="Body Camera Proportion", title = "Body Camera On Proportion #By US Region") +  geom_text(hjust=1, vjust=-0.6)
summary(By_State)
#Some statistical testing that I need to tinker more with next week
itwo.way <- aov(stbcp ~ ((age.avg * Non_White_prop * gen.p) + (smi.p * flee.p * MoD.p * att.p * armed.p)), data=sfp)
summary(itwo.way)
# Use sfp to call dataset grouped by states, call rfp dataset grouped by regions, and fp
mean(rfp$rgbcp)
head(By_State)
test<- subset(By_State, select = c())
#Defining 2 new datasets. These show all the variables (with some modification) by state. PLEASE DO NOT MODIFY. THIS WAS HARD AS HELL.
#Still working on it
sfp <- fp %>%
group_by(state) %>%
mutate(stbcp =  sum(body_camera==1)/n())
#This is a numeric proportion of the Men by state
sfp <- sfp %>%
group_by(state) %>%
mutate(gen.p =  sum(gender=="M")/n())
#This is a numeric proportion of sings_of_mental_illness by state
sfp <- sfp %>%
group_by(state) %>%
mutate(smi.p =  sum(signs_of_mental_illness==TRUE)/n())
#This is a numeric proportion of fleeing victims by state
sfp <- sfp %>%
group_by(state) %>%
mutate(flee.p =  sum(flee=="fleeing")/n())
#This is a numeric proportion of attackers by state
sfp <- sfp %>%
group_by(state) %>%
mutate(att.p =  sum(threat_level== "attack")/n())
#This is a numeric proportion of armed victims by state
sfp <- sfp %>%
group_by(state) %>%
mutate(armed.p =  sum(armed != "unarmed")/n())
#This is a numeric proportion of suspects being shot (as opposed to tasered) by state
sfp <- sfp %>%
group_by(state) %>%
mutate(MoD.p =  sum(manner_of_death == "shot")/n())
#This is the average age by state
sfp <- sfp %>%
group_by(state) %>%
mutate(age.avg =  sum(age)/n())
#This is variable is for later analysis (maybe for the final) and is the proportion of non-white victims by state
sfp <- sfp %>%
group_by(state) %>%
mutate(Non_White_prop =  sum(race != "W")/n())
#This line just drops all non grouped by state data from this version of the dataframe
By_State <- subset(sfp, select= -c(name, id, age, latitude, longitude, city, manner_of_death, gender, armed, race, signs_of_mental_illness, flee, threat_level, body_camera, date, is_geocoding_exact))
summary(By_State)
test<- By_State
cat3 <- test %>% mutate(proportion=cut(stbcp, breaks=c(0, 0.10, 0.2, 0.3, Inf),labels = c("low", "medium", "high", "very high")))
test<- By_State
cat3 <- test %>% mutate(proportion=cut(stbcp, breaks=c(0, 0.10, 0.2, 0.3, Inf),labels = c("low", "medium", "high", "very high")))
cat3 <- subset(cat3, select -c(stpbcp))
test<- By_State
cat3 <- test %>% mutate(proportion=cut(stbcp, breaks=c(0, 0.10, 0.2, 0.3, Inf),labels = c("low", "medium", "high", "very high")))
cat3 <- subset(cat3, select -c(stbcp))
test<- By_State
cat3 <- test %>% mutate(proportion=cut(stbcp, breaks=c(0, 0.10, 0.2, 0.3, Inf),labels = c("low", "medium", "high", "very high")))
cat3 <- subset(cat3, select= -c(stbcp))
summary(cat3$stbcp)
test<- By_State
cat3 <- test %>% mutate(proportion=cut(stbcp, breaks=c(0, 0.10, 0.2, 0.3, Inf),labels = c("low", "medium", "high", "very high")))
summary(cat3$stbcp)
test<- By_State
cat3 <- test %>% mutate(proportion=cut(stbcp, breaks=c(0, 0.10, 0.2, 0.3, Inf),labels = c("low", "medium", "high", "very high")))
summary(cat3$stbcp)
cat3$state <- as.factor(cat3$state)
test<- By_State
cat3 <- test %>% mutate(proportion=cut(stbcp, breaks=c(0, 0.10, 0.2, 0.3, Inf),labels = c("low", "medium", "high", "very high")))
summary(cat3$stbcp)
cat3$state <- as.factor(cat3$state)
contable= table(cat3$state, cat3$stbcp)
chitest=chisq.test(contable)
test<- By_State
cat3 <- test %>% mutate(proportion=cut(stbcp, breaks=c(0, 0.10, 0.2, 0.3, Inf),labels = c("low", "medium", "high", "very high")))
summary(cat3$stbcp)
cat3$state <- as.factor(cat3$state)
contable= table(cat3$state, cat3$stbcp)
chitest=chisq.test(contable)
summary(chitest)
test<- By_State
cat3 <- test %>% mutate(proportion=cut(stbcp, breaks=c(0, 0.10, 0.2, 0.3, Inf),labels = c("low", "medium", "high", "very high")))
summary(cat3$stbcp)
cat3$state <- as.factor(cat3$state)
contable= table(cat3$state, cat3$stbcp)
print(contable)
test<- By_State
cat3 <- test %>% mutate(proportion=cut(stbcp, breaks=c(0, 0.10, 0.2, 0.3, Inf),labels = c("low", "medium", "high", "very high")))
summary(cat3$stbcp)
cat3$state <- as.factor(cat3$state)
cat3$stbcp <- as.factor(cat3$stbcp)
contable= table(cat3$state, cat3$stbcp)
print(contable)
test<- By_State
cat3 <- test %>% mutate(proportion=cut(stbcp, breaks=c(0, 0.10, 0.2, 0.3, Inf),labels = c("low", "medium", "high", "very high")))
summary(cat3$stbcp)
cat3$state <- as.factor(cat3$state)
cat3$stbcp <- as.factor(cat3$stbcp)
contable= table(cat3$state, cat3$stbcp)
print(contable)
chisq.test(contable)
test<- By_State
cat3 <- test %>% mutate(proportion=cut(stbcp, breaks=c(0, 0.10, 0.2, 0.3, Inf),labels = c("low", "medium", "high", "very high")))
summary(cat3$stbcp)
cat3$state <- as.factor(cat3$state)
cat3$stbcp <- as.factor(cat3$stbcp)
contable= table(cat3$state, cat3$stbcp)
print(contable)
ct1=chisq.test(contable)
summary(ct1)
test<- By_State
cat3 <- test %>% mutate(proportion=cut(stbcp, breaks=c(0, 0.10, 0.2, 0.3, Inf),labels = c("low", "medium", "high", "very high")))
summary(cat3$stbcp)
cat3$state <- as.factor(cat3$state)
cat3$stbcp <- as.factor(cat3$stbcp)
contable= table(cat3$state, cat3$stbcp)
#print(contable)
ct1=chisq.test(contable)
summary(ct1)
test<- By_State
cat3 <- test %>% mutate(proportion=cut(stbcp, breaks=c(0, 0.10, 0.2, 0.3, Inf),labels = c("low", "medium", "high", "very high")))
summary(cat3$stbcp)
cat3$state <- as.factor(cat3$state)
cat3$stbcp <- as.factor(cat3$stbcp)
contable= table(cat3$state, cat3$stbcp)
#print(contable)
chisq.test(contable)
