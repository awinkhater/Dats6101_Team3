}
if(fp$state[i] =="RI"){
fp$spendpc[i] <- vspc[40]
}
if(fp$state[i] =="SC"){
fp$spendpc[i] <- vspc[41]
}
if(fp$state[i] =="SD"){
fp$spendpc[i] <- vspc[42]
}
if(fp$state[i] =="TN"){
fp$spendpc[i] <- vspc[43]
}
if(fp$state[i] =="TX"){
fp$spendpc[i] <- vspc[44]
}
if(fp$state[i] =="UT"){
fp$spendpc[i] <- vspc[45]
}
if(fp$state[i] =="VT"){
fp$spendpc[i] <- vspc[46]
}
if(fp$state[i] =="VA"){
fp$spendpc[i] <- vspc[47]
}
if(fp$state[i] =="WA"){
fp$spendpc[i] <- vspc[48]
}
if(fp$state[i] =="WV"){
fp$spendpc[i] <- vspc[49]
}
if(fp$state[i] =="WI"){
fp$spendpc[i] <- vspc[50]
}
if(fp$state[i] =="WY"){
fp$spendpc[i] <- vspc[51]
}
}
#This is to acknowledge the states that (as of 2021) had a laws requiring officers to have the body cameras on during interactions with the public
fp$bclaw <- NA
for (i in 1:nrow(fp)) {
if(fp$state[i] =="MD"){
fp$bclaw[i] <- 1
}
if(fp$state[i] =="NJ"){
fp$bclaw[i] <- 1
}
if(fp$state[i] =="NM"){
fp$bclaw[i] <- 1
}
if(fp$state[i] =="SC"){
fp$bclaw[i] <- 1
}
else {
fp$bclaw[i] <- 0
}
}
v2020 <- c(-25, -10, 0.31, -28, 29, 14, 87, 20, 19, -3,0.24, 29, -31, 17, -16, -8, -15, -26, -19, 9, 33, 33, 3, 7, -17, -15, -16, -19, 2, 7, 16, 11, 23, -1.3, -33, -8, -33, 16, 1.2, 21, -12, -26, -23,-6, -20, 34, 10, 19, -39, 0.63, -43  )
fp %>% add_column(marg2020 = NA)
for (i in 1:nrow(fp)) {
if(fp$state[i] =="AL"){
fp$marg2020[i] <- v2020[1]
}
if(fp$state[i] =="AK"){
fp$marg2020[i] <- v2020[2]
}
if(fp$state[i] =="AZ"){
fp$marg2020[i] <- v2020[3]
}
if(fp$state[i] =="AR"){
fp$marg2020[i] <- v2020[4]
}
if(fp$state[i] =="CA"){
fp$marg2020[i] <- v2020[5]
}
if(fp$state[i] =="CO"){
fp$marg2020[i] <- v2020[6]
}
if(fp$state[i] =="CT"){
fp$marg2020[i] <- v2020[7]
}
if(fp$state[i] =="DE"){
fp$marg2020[i] <- v2020[8]
}
if(fp$state[i] =="DC"){
fp$marg2020[i] <- v2020[9]
}
if(fp$state[i] =="FL"){
fp$marg2020[i] <- v2020[10]
}
if(fp$state[i] =="GA"){
fp$marg2020[i] <- v2020[11]
}
if(fp$state[i] =="HI"){
fp$marg2020[i] <- v2020[12]
}
if(fp$state[i] =="ID"){
fp$marg2020[i] <- v2020[13]
}
if(fp$state[i] =="IL"){
fp$marg2020[i] <- v2020[14]
}
if(fp$state[i] =="IN"){
fp$marg2020[i] <- v2020[15]
}
if(fp$state[i] =="IA"){
fp$marg2020[i] <- v2020[16]
}
if(fp$state[i] =="KS"){
fp$marg2020[i] <- v2020[17]
}
if(fp$state[i] =="KY"){
fp$marg2020[i] <- v2020[18]
}
if(fp$state[i] =="LA"){
fp$marg2020[i] <- v2020[19]
}
if(fp$state[i] =="ME"){
fp$marg2020[i] <- v2020[20]
}
if(fp$state[i] =="MD"){
fp$marg2020[i] <- v2020[21]
}
if(fp$state[i] =="MA"){
fp$marg2020[i] <- v2020[22]
}
if(fp$state[i] =="MI"){
fp$marg2020[i] <- v2020[23]
}
if(fp$state[i] =="MN"){
fp$marg2020[i] <- v2020[24]
}
if(fp$state[i] =="MS"){
fp$marg2020[i] <- v2020[25]
}
if(fp$state[i] =="MO"){
fp$marg2020[i] <- v2020[26]
}
if(fp$state[i] =="MT"){
fp$marg2020[i] <- v2020[27]
}
if(fp$state[i] =="NE"){
fp$marg2020[i] <- v2020[28]
}
if(fp$state[i] =="NV"){
fp$marg2020[i] <- v2020[29]
}
if(fp$state[i] =="NH"){
fp$marg2020[i] <- v2020[30]
}
if(fp$state[i] =="NJ"){
fp$marg2020[i] <- v2020[31]
}
if(fp$state[i] =="NM"){
fp$marg2020[i] <- v2020[32]
}
if(fp$state[i] =="NY"){
fp$marg2020[i] <- v2020[33]
}
if(fp$state[i] =="NC"){
fp$marg2020[i] <- v2020[34]
}
if(fp$state[i] =="ND"){
fp$marg2020[i] <- v2020[35]
}
if(fp$state[i] =="OH"){
fp$marg2020[i] <- v2020[36]
}
if(fp$state[i] =="OK"){
fp$marg2020[i] <- v2020[37]
}
if(fp$state[i] =="OR"){
fp$marg2020[i] <- v2020[38]
}
if(fp$state[i] =="PA"){
fp$marg2020[i] <- v2020[39]
}
if(fp$state[i] =="RI"){
fp$marg2020[i] <- v2020[40]
}
if(fp$state[i] =="SC"){
fp$marg2020[i] <- v2020[41]
}
if(fp$state[i] =="SD"){
fp$marg2020[i] <- v2020[42]
}
if(fp$state[i] =="TN"){
fp$marg2020[i] <- v2020[43]
}
if(fp$state[i] =="TX"){
fp$marg2020[i] <- v2020[44]
}
if(fp$state[i] =="UT"){
fp$marg2020[i] <- v2020[45]
}
if(fp$state[i] =="VT"){
fp$marg2020[i] <- v2020[46]
}
if(fp$state[i] =="VA"){
fp$marg2020[i] <- v2020[47]
}
if(fp$state[i] =="WA"){
fp$marg2020[i] <- v2020[48]
}
if(fp$state[i] =="WV"){
fp$marg2020[i] <- v2020[49]
}
if(fp$state[i] =="WI"){
fp$marg2020[i] <- v2020[50]
}
if(fp$state[i] =="WY"){
fp$marg2020[i] <- v2020[51]
}
}
vle <- c(418.356, 604.3172, 507.1749, 455.5134, 378.4166, 416.7751, 406.803, 517.3799, 722, 439.7941,  487.2325,494.1445, 378.7875, 476.7941, 379.4256, 307.9675, 466.5578, 390.2951, 595.0071, 411.2744,619.3873,440.4483,359.6753,324.5891,487.8593,459.6233,435.4656, 412.0619, 409.9609, 419.7185, 532.2092, 506.5776, 630.0293, 438.4865, 392.6816, 395.1726, 410.4272, 283.7333, 462.605, 412.0791, 420.8136, 449.0854, 438.823, 479.3943, 299.0369, 321.71, 597.2275, 319.9674, 516.3705, 404.1405, 501.126)
fp %>% add_column(le_per_100k = NA)
for (i in 1:nrow(fp)) {
if(fp$state[i] =="AL"){
fp$le_per_100k[i] <- vle[1]
}
if(fp$state[i] =="AK"){
fp$le_per_100k[i] <- vle[2]
}
if(fp$state[i] =="AZ"){
fp$le_per_100k[i] <- vle[3]
}
if(fp$state[i] =="AR"){
fp$le_per_100k[i] <- vle[4]
}
if(fp$state[i] =="CA"){
fp$le_per_100k[i] <- vle[5]
}
if(fp$state[i] =="CO"){
fp$le_per_100k[i] <- vle[6]
}
if(fp$state[i] =="CT"){
fp$le_per_100k[i] <- vle[7]
}
if(fp$state[i] =="DE"){
fp$le_per_100k[i] <- vle[8]
}
if(fp$state[i] =="DC"){
fp$le_per_100k[i] <- vle[9]
}
if(fp$state[i] =="FL"){
fp$le_per_100k[i] <- vle[10]
}
if(fp$state[i] =="GA"){
fp$le_per_100k[i] <- vle[11]
}
if(fp$state[i] =="HI"){
fp$le_per_100k[i] <- vle[12]
}
if(fp$state[i] =="ID"){
fp$le_per_100k[i] <- vle[13]
}
if(fp$state[i] =="IL"){
fp$le_per_100k[i] <- vle[14]
}
if(fp$state[i] =="IN"){
fp$le_per_100k[i] <- vle[15]
}
if(fp$state[i] =="IA"){
fp$le_per_100k[i] <- vle[16]
}
if(fp$state[i] =="KS"){
fp$le_per_100k[i] <- vle[17]
}
if(fp$state[i] =="KY"){
fp$le_per_100k[i] <- vle[18]
}
if(fp$state[i] =="LA"){
fp$le_per_100k[i] <- vle[19]
}
if(fp$state[i] =="ME"){
fp$le_per_100k[i] <- vle[20]
}
if(fp$state[i] =="MD"){
fp$le_per_100k[i] <- vle[21]
}
if(fp$state[i] =="MA"){
fp$le_per_100k[i] <- vle[22]
}
if(fp$state[i] =="MI"){
fp$le_per_100k[i] <- vle[23]
}
if(fp$state[i] =="MN"){
fp$le_per_100k[i] <- vle[24]
}
if(fp$state[i] =="MS"){
fp$le_per_100k[i] <- vle[25]
}
if(fp$state[i] =="MO"){
fp$le_per_100k[i] <- vle[26]
}
if(fp$state[i] =="MT"){
fp$le_per_100k[i] <- vle[27]
}
if(fp$state[i] =="NE"){
fp$le_per_100k[i] <- vle[28]
}
if(fp$state[i] =="NV"){
fp$le_per_100k[i] <- vle[29]
}
if(fp$state[i] =="NH"){
fp$le_per_100k[i] <- vle[30]
}
if(fp$state[i] =="NJ"){
fp$le_per_100k[i] <- vle[31]
}
if(fp$state[i] =="NM"){
fp$le_per_100k[i] <- vle[32]
}
if(fp$state[i] =="NY"){
fp$le_per_100k[i] <- vle[33]
}
if(fp$state[i] =="NC"){
fp$le_per_100k[i] <- vle[34]
}
if(fp$state[i] =="ND"){
fp$le_per_100k[i] <- vle[35]
}
if(fp$state[i] =="OH"){
fp$le_per_100k[i] <- vle[36]
}
if(fp$state[i] =="OK"){
fp$le_per_100k[i] <- vle[37]
}
if(fp$state[i] =="OR"){
fp$le_per_100k[i] <- vle[38]
}
if(fp$state[i] =="PA"){
fp$le_per_100k[i] <- vle[39]
}
if(fp$state[i] =="RI"){
fp$le_per_100k[i] <- vle[40]
}
if(fp$state[i] =="SC"){
fp$le_per_100k[i] <- vle[41]
}
if(fp$state[i] =="SD"){
fp$le_per_100k[i] <- vle[42]
}
if(fp$state[i] =="TN"){
fp$le_per_100k[i] <- vle[43]
}
if(fp$state[i] =="TX"){
fp$le_per_100k[i] <- vle[44]
}
if(fp$state[i] =="UT"){
fp$le_per_100k[i] <- vle[45]
}
if(fp$state[i] =="VT"){
fp$le_per_100k[i] <- vle[46]
}
if(fp$state[i] =="VA"){
fp$le_per_100k[i] <- vle[47]
}
if(fp$state[i] =="WA"){
fp$le_per_100k[i] <- vle[48]
}
if(fp$state[i] =="WV"){
fp$le_per_100k[i] <- vle[49]
}
if(fp$state[i] =="WI"){
fp$le_per_100k[i] <- vle[50]
}
if(fp$state[i] =="WY"){
fp$le_per_100k[i] <- vle[51]
}
}
ffp <- subset(fp, (year== 2022| year==2021) )
#Defining 2 new data sets. These show all the variables (with some modification) by state.
sfp <- ffp %>%
group_by(state) %>%
mutate(stbcp =  sum(body_camera==1)/n())
#This is a numeric proportion of the Men by state
sfp <- sfp %>%
group_by(state) %>%
mutate(gen.p =  sum(gender=="M")/n())
#This is a numeric proportion of sings_of_mental_illness by state
sfp <- sfp %>%
group_by(state) %>%
mutate(smi.p =  sum(signs_of_mental_illness==TRUE)/n())
#This is a numeric proportion of fleeing victims by state
sfp <- sfp %>%
group_by(state) %>%
mutate(flee.p =  sum(flee=="fleeing")/n())
#This is a numeric proportion of attackers by state
sfp <- sfp %>%
group_by(state) %>%
mutate(att.p =  sum(threat_level== "attack")/n())
#This is a numeric proportion of armed victims by state
sfp <- sfp %>%
group_by(state) %>%
mutate(armed.p =  sum(armed != "unarmed")/n())
#This is a numeric proportion of suspects being shot (as opposed to tasered) by state
sfp <- sfp %>%
group_by(state) %>%
mutate(MoD.p =  sum(manner_of_death == "shot")/n())
#This is the average age by state
sfp <- sfp %>%
group_by(state) %>%
mutate(age.avg =  sum(age)/n())
#This is variable is for later analysis (maybe for the final) and is the proportion of non-white victims by state
sfp <- sfp %>%
group_by(state) %>%
mutate(Non_White_prop =  sum(race != "W")/n())
#This line just drops all non grouped by state data from this version of the data frame
By_State <- subset(sfp, select= -c(name, id, age, latitude, longitude, city, manner_of_death, gender, armed, race, signs_of_mental_illness, flee, threat_level, body_camera, date, is_geocoding_exact))
rfp <- sfp %>%
group_by(regions) %>%
mutate(rgbcp =  sum(body_camera==TRUE)/n())
rfp <- sfp %>%
group_by(regions) %>%
mutate(gen.p =  sum(gender=="M")/n())
rfp <- sfp %>%
group_by(regions) %>%
mutate(smi.p =  sum(signs_of_mental_illness==TRUE)/n())
rfp <- rfp %>%
group_by(regions) %>%
mutate(flee.p =  sum(flee=="fleeing")/n())
rfp <- sfp %>%
group_by(regions) %>%
mutate(att.p =  sum(threat_level== "attack")/n())
rfp <- sfp %>%
group_by(regions) %>%
mutate(armed.p =  sum(armed != "unarmed")/n())
rfp <- sfp %>%
group_by(regions) %>%
mutate(MoD.p =  sum(manner_of_death == "shot")/n())
rfp <- sfp %>%
group_by(regions) %>%
mutate(age.avg =  sum(age)/n())
rfp <- sfp %>%
group_by(regions) %>%
mutate(Non_White_prop =  sum(race != "W")/n())
By_Region <- subset(sfp, select= -c(name, id, age, latitude, longitude, city, manner_of_death, gender, armed, race, signs_of_mental_illness, flee, threat_level, body_camera, regions, date, is_geocoding_exact))
print(count(camera_yes,body_camera))
print(count(camera_no,body_camera))
#A bar graph showing the number of fatal police shootings AND proportions of body cameras being on by region (too many states to show on a bar graph like this)
ggplot(fp, aes(x = regions, y = frequency(regions), color=body_camera)) + geom_bar(stat = "identity")+ labs(x = "State", y="Number of Deaths", title = "Regional Police Shootings Colored by Body Camera Proportions")
#Normality check of proportions of body cameras being on by state
qqnorm(By_State$stbcp)
#Seems normal
#Scatter Plot of Body Camera Proportion by Region
pl <- ggplot(data=By_State,aes(x = regions,y=stbcp))
pl + geom_point(aes(colour =stbcp,size=4)) + scale_colour_gradient(high='red',low = "blue")
test<- By_State
#Setting
cat3 <- test %>% mutate(proportion=cut(stbcp, breaks=c(0, 0.10, 0.2, 0.3, Inf),labels = c("low", "medium", "high", "very high")))
summary(cat3$stbcp)
cat3$state <- as.factor(cat3$state)
cat3$stbcp <- as.factor(cat3$stbcp)
contable= table(cat3$state, cat3$stbcp)
#print(contable)
suppressWarnings({chisq.test(contable)})
#FINAL PROJECT WORK: ADDING NEW COLUMNS OF DATA
FD <- subset(By_State, (year== 2022| year==2021) )
FD$regions = factor(FD$regions)
head(FD)
nrow(FD)
#stbcp vs le_per_100k
ggplot(data=FD,aes(x = stbcp,y=bclaw)) + geom_point(aes(color=le_per_100k,size=le_per_100k))+ labs(x = "stbcp", y="Laws governing body camera usage")
#stbcp vs le_per_100k
ggplot(data=FD,aes(x = stbcp,y=le_per_100k)) + geom_point(aes(color=stbcp,size=stbcp))+ labs(x = "stbcp", y="Law enforcment officers per 100,000 citizens")
#stbcp vs marg2020
ggplot(data=FD,aes(x = stbcp,y=marg2020)) + geom_point(aes(color=marg2020,size =marg2020))+ labs(x = "stbcp", y="Percent margin voting swing")
#spendpc vs regions
ggplot(data=FD,aes(x = regions,y=stbcp)) + geom_point(aes(color=regions,size =stbcp))+ labs(x = "Region", y="stbcp")
lm1 <- lm(stbcp~ (marg2020 + bclaw + regions + le_per_100k+ spendpc), data=FD)
summary(lm1)
car::vif(lm1 )
# Grab residuals
res <- residuals(lm1)
# Convert to DataFrame for gglpot
res <- as.data.frame(res)
head(res)
plot(lm1)
lm2 <- lm(stbcp~ (marg2020+bclaw+spendpc+ le_per_100k), data=FD)
summary(lm2)
car::vif(lm2)
# Grab residuals
res <- residuals(lm2)
# Convert to DataFrame for gglpot
res <- as.data.frame(res)
head(res)
plot(lm2)
lm3 <- lm(stbcp~ (marg2020 + bclaw + regions + le_per_100k+ spendpc + I(spendpc*le_per_100k)), data=FD)
summary(lm3)
# Grab residuals
res <- residuals(lm3)
# Convert to DataFrame for gglpot
res <- as.data.frame(res)
head(res)
plot(lm3)
Atlantis <- data.frame(bclaw = c(1), marg2020=c(-10), regions=c('SW'), le_per_100k= c(500), spendpc=c(720))
Burk <- data.frame(bclaw = c(0), marg2020=c(-33), regions=c('MW'), le_per_100k= c(249), spendpc=c(398))
Caelid <-data.frame(bclaw = c(1), marg2020=c(29), regions=c('NE'), le_per_100k= c(610), spendpc=c(880))
Dollywood <- data.frame(bclaw = c(0), marg2020=c(5), regions=c('SE'), le_per_100k= c(200), spendpc=c(203))
Eleum <- data.frame(bclaw = c(0), marg2020=c(-20), regions=c('NW'), le_per_100k= c(440), spendpc=c(545))
Faraam <- data.frame(bclaw = c(1), marg2020=c(-20), regions=c('NW'), le_per_100k= c(440), spendpc=c(545))
GW <- data.frame(bclaw = c(0), marg2020=c(20), regions=c('SE'), le_per_100k= c(540), spendpc=c(645))
HW <- data.frame(bclaw = c(1), marg2020=c(20), regions=c('SE'), le_per_100k= c(540), spendpc=c(645))
predict(lm3, newdata = Atlantis, interval = 'confidence')
predict(lm3, newdata= Burk ,interval = 'confidence')
predict(lm3, newdata = Caelid, interval = 'confidence')
predict(lm3, newdata = Dollywood, interval = 'confidence')
predict(lm3, newdata = Eleum, interval = 'confidence')
predict(lm3, newdata = Faraam, interval = 'confidence')
predict(lm3, newdata = GW, interval = 'confidence')
predict(lm3, newdata = HW, interval = 'confidence')
